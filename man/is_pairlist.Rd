% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{is_pairlist}
\alias{is_pairlist}
\alias{are_pairlist,}
\alias{is_not_pairlist,}
\alias{are_not_pairlist}
\alias{is_not_pairlist}
\alias{are_pairlist}
\title{Is object a node or pairlist?}
\usage{
is_pairlist(x)

is_not_pairlist(x)

are_pairlist(x)

are_not_pairlist(x)
}
\arguments{
\item{x}{Object to test.}
}
\value{
\itemize{
\item Calls to \code{is_pairlist} are guaranteed to return a scalar boolean (ie. a single \code{TRUE} or \code{FALSE} value). If an argument of length > 1 is given, \code{FALSE} is returned.
\item \code{are_pairlist} is a wrapper around \code{\link[purrr]{map_lgl}(vec, \(i) is_pairlist(i, ...))}. A boolean vector of the same length as the input is guaranteed.
\item Calls to \code{is_not_pairlist}/\code{are_not_pairlist} negate the output of \code{is_pairlist}/\code{are_pairlist}.}
}
\description{
This is a re-export of \code{\link[rlang:is_pairlist]{rlang::is_pairlist()}}, modified to have standardised naming and standardised vector handling.
Documentation is atuomatically generated from the original package documentation. See the \code{\link[rlang:is_pairlist]{original}} for full details.

\itemize{
\item{ \code{is_pairlist()} checks that \code{x} has type \code{pairlist}.
}\item{ \code{is_node()} checks that \code{x} has type \code{pairlist} or \code{language}.
It tests whether \code{x} is a node that has a CAR and a CDR,
including callable nodes (language objects).
}\item{ \code{is_node_list()} checks that \code{x} has type \code{pairlist} or \code{NULL}.
\code{NULL} is the empty node list.
}}.
}
