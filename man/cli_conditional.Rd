% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cli_conditionals.R
\name{cli_conditional}
\alias{cli_conditional}
\alias{abort_if}
\alias{abort_if_not}
\alias{warn_if}
\alias{warn_if_not}
\alias{inform_if}
\alias{inform_if_not}
\title{Conditional CLI Message Functions}
\usage{
abort_if(
  condition,
  message,
  ...,
  call = .envir,
  .envir = parent.frame(),
  .frame = .envir
)

abort_if_not(
  condition,
  message,
  ...,
  call = .envir,
  .envir = parent.frame(),
  .frame = .envir
)

warn_if(condition, message, ..., .envir = parent.frame())

warn_if_not(condition, message, ..., .envir = parent.frame())

inform_if(condition, message, ..., .envir = parent.frame())

inform_if_not(condition, message, ..., .envir = parent.frame())
}
\arguments{
\item{condition}{Logical. For \verb{*_if} functions, the message is displayed when TRUE.
For \verb{*_if_not} functions, the message is displayed when FALSE.}

\item{message}{The message to display}

\item{...}{Additional arguments passed to the corresponding cli function}

\item{call}{The execution environment for error messages}

\item{.envir}{The environment to use for message interpolation}

\item{.frame}{The environment to use for error messages}
}
\value{
Nothing is returned; these functions are called for their side effects
}
\description{
These functions provide convenient wrappers around cli message functions that
only execute when a condition is TRUE (for \verb{*_if}) or FALSE (for \verb{*_if_not}).
They maintain all the functionality of the original cli functions while adding
conditional execution.
}
\examples{
\dontrun{
x <- -5
abort_if(x < 0, "Value must be positive")
warn_if_not(x >= 0, "Value should be non-negative")
inform_if(x > 100, "Large value detected: {x}")
}

}
