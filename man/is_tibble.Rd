% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{is_tibble}
\alias{is_tibble}
\alias{are_tibble,}
\alias{is_not_tibble,}
\alias{are_not_tibble}
\alias{is_not_tibble}
\alias{are_tibble}
\title{Check if an argument is a tibble}
\usage{
is_tibble(
  x,
  types = character(0L),
  any.missing = TRUE,
  all.missing = TRUE,
  min.rows = NULL,
  max.rows = NULL,
  min.cols = NULL,
  max.cols = NULL,
  nrows = NULL,
  ncols = NULL,
  row.names = NULL,
  col.names = NULL,
  null.ok = FALSE
)

is_not_tibble(
  x,
  types = character(0L),
  any.missing = TRUE,
  all.missing = TRUE,
  min.rows = NULL,
  max.rows = NULL,
  min.cols = NULL,
  max.cols = NULL,
  nrows = NULL,
  ncols = NULL,
  row.names = NULL,
  col.names = NULL,
  null.ok = FALSE
)

are_tibble(
  x,
  types = character(0L),
  any.missing = TRUE,
  all.missing = TRUE,
  min.rows = NULL,
  max.rows = NULL,
  min.cols = NULL,
  max.cols = NULL,
  nrows = NULL,
  ncols = NULL,
  row.names = NULL,
  col.names = NULL,
  null.ok = FALSE
)

are_not_tibble(
  x,
  types = character(0L),
  any.missing = TRUE,
  all.missing = TRUE,
  min.rows = NULL,
  max.rows = NULL,
  min.cols = NULL,
  max.cols = NULL,
  nrows = NULL,
  ncols = NULL,
  row.names = NULL,
  col.names = NULL,
  null.ok = FALSE
)
}
\arguments{
\item{x}{any\cr
Object to check.}

\item{types}{\code{character}\cr
Character vector of class names. Each list element must inherit
from at least one of the provided types.
The types \dQuote{logical}, \dQuote{integer}, \dQuote{integerish}, \dQuote{double},
\dQuote{numeric}, \dQuote{complex}, \dQuote{character}, \dQuote{factor}, \dQuote{atomic}, \dQuote{vector}
\dQuote{atomicvector}, \dQuote{array}, \dQuote{matrix}, \dQuote{list}, \dQuote{function},
\dQuote{environment} and \dQuote{null} are supported.
For other types \code{\link[base]{inherits}} is used as a fallback to check \code{x}'s inheritance.
Defaults to \code{character(0)} (no check).}

\item{any.missing}{\code{logical(1)}\cr
Are missing values allowed? Default is \code{TRUE}.}

\item{all.missing}{\code{logical(1)}\cr
Are matrices with only missing values allowed? Default is \code{TRUE}.}

\item{min.rows}{\code{integer(1)}\cr
Minimum number of rows.}

\item{max.rows}{\code{integer(1)}\cr
Maximum number of rows.}

\item{min.cols}{\code{integer(1)}\cr
Minimum number of columns.}

\item{max.cols}{\code{integer(1)}\cr
Maximum number of columns.}

\item{nrows}{\code{integer(1)}\cr
Exact number of rows.}

\item{ncols}{\code{integer(1)}\cr
Exact number of columns.}

\item{row.names}{\code{character(1)}\cr
Check for row names. Default is \dQuote{NULL} (no check).
See \code{\link{checkNamed}} for possible values.
Note that you can use \code{\link{checkSubset}} to check for a specific set of names.}

\item{col.names}{\code{character(1)}\cr
Check for column names. Default is \dQuote{NULL} (no check).
See \code{\link{checkNamed}} for possible values.
Note that you can use \code{\link{checkSubset}} to test for a specific set of names.}

\item{null.ok}{\code{logical(1)}\cr
If set to \code{TRUE}, \code{x} may also be \code{NULL}.
In this case only a type check of \code{x} is performed, all additional checks are disabled.}
}
\value{
\itemize{
\item Calls to \code{is_tibble} are guaranteed to return a scalar boolean (ie. a single \code{TRUE} or \code{FALSE} value). If an argument of length > 1 is given, \code{FALSE} is returned.
\item \code{are_tibble} is a wrapper around \code{\link[purrr]{map_lgl}(vec, \(i) is_tibble(i, ...))}. A boolean vector of the same length as the input is guaranteed.
\item Calls to \code{is_not_tibble}/\code{are_not_tibble} negate the output of \code{is_tibble}/\code{are_tibble}.}
}
\description{
This is a re-export of \code{\link[checkmate:checkTibble]{checkmate::test_tibble()}}, modified to have standardised naming and standardised vector handling.
Documentation is atuomatically generated from the original package documentation. See the \code{\link[checkmate:checkTibble]{original}} for full details.

Check if an argument is a tibble.
}
