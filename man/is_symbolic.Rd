% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{is_symbolic}
\alias{is_symbolic}
\alias{are_symbolic,}
\alias{is_not_symbolic,}
\alias{are_not_symbolic}
\alias{is_not_symbolic}
\alias{are_symbolic}
\title{Is an object an expression?}
\usage{
is_symbolic(x)

is_not_symbolic(x)

are_symbolic(x)

are_not_symbolic(x)
}
\arguments{
\item{x}{An object to test.}
}
\value{
\itemize{
\item Calls to \code{is_symbolic} are guaranteed to return a scalar boolean (ie. a single \code{TRUE} or \code{FALSE} value). If an argument of length > 1 is given, \code{FALSE} is returned.
\item \code{are_symbolic} is a wrapper around \code{\link[purrr]{map_lgl}(vec, \(i) is_symbolic(i, ...))}. A boolean vector of the same length as the input is guaranteed.
\item Calls to \code{is_not_symbolic}/\code{are_not_symbolic} negate the output of \code{is_symbolic}/\code{are_symbolic}.}
}
\description{
This is a re-export of \code{\link[rlang:is_expression]{rlang::is_symbolic()}}, modified to have standardised naming and standardised vector handling.
Documentation is atuomatically generated from the original package documentation. See the \code{\link[rlang:is_expression]{original}} for full details.

In rlang, an \emph{expression} is the return type of \code{\link[rlang:parse_expr]{parse_expr()}}, the
set of objects that can be obtained from parsing R code. Under this
definition expressions include numbers, strings, \code{NULL}, symbols,
and function calls. These objects can be classified as:
\itemize{
\item{ Symbolic objects, i.e. symbols and function calls (for which
\code{is_symbolic()} returns \code{TRUE})
}\item{ Syntactic literals, i.e. scalar atomic objects and \code{NULL}
(testable with \code{is_syntactic_literal()})
}}

\code{is_expression()} returns \code{TRUE} if the input is either a symbolic
object or a syntactic literal. If a call, the elements of the call
must all be expressions as well. Unparsable calls are not
considered expressions in this narrow definition.

Note that in base R, there exists \code{\link[=expression]{expression()}} vectors, a data
type similar to a list that supports special attributes created by
the parser called source references. This data type is not
supported in rlang.
}
