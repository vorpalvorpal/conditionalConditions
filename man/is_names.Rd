% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{is_names}
\alias{is_names}
\alias{are_names,}
\alias{is_not_names,}
\alias{are_not_names}
\alias{is_not_names}
\alias{are_names}
\title{Check names to comply to specific rules}
\usage{
is_names(
  x,
  type = "named",
  subset.of = NULL,
  must.include = NULL,
  permutation.of = NULL,
  identical.to = NULL,
  disjunct.from = NULL,
  what = "names"
)

is_not_names(
  x,
  type,
  subset.of,
  must.include,
  permutation.of,
  identical.to,
  disjunct.from,
  what
)

are_names(
  x,
  type,
  subset.of,
  must.include,
  permutation.of,
  identical.to,
  disjunct.from,
  what
)

are_not_names(
  x,
  type,
  subset.of,
  must.include,
  permutation.of,
  identical.to,
  disjunct.from,
  what
)
}
\arguments{
\item{x}{\code{character} || \code{NULL}\cr
Names to check using rules defined via \code{type}.}

\item{type}{character(1)\cr
Type of formal check(s) to perform on the names.
\describe{
\item{unnamed:}{Checks \code{x} to be \code{NULL}.}
\item{named:}{Checks \code{x} for regular names which excludes names to be \code{NA} or empty (\code{""}).}
\item{unique:}{Performs checks like with \dQuote{named} and additionally tests for non-duplicated names.}
\item{strict:}{Performs checks like with \dQuote{unique} and additionally fails for names with UTF-8 characters and names which do not comply to R's variable name restrictions.
As regular expression, this is \dQuote{^\link{.}\emph{\link{a-zA-Z}+\link{a-zA-Z0-9._}}$}.}
\item{ids:}{Same as \dQuote{strict}, but does not enforce uniqueness.}
}
Note that for zero-length \code{x}, all these name checks evaluate to \code{TRUE}.}

\item{subset.of}{\code{character}\cr
Names provided in \code{x} must be subset of the set \code{subset.of}.}

\item{must.include}{\code{character}\cr
Names provided in \code{x} must be a superset of the set \code{must.include}.}

\item{permutation.of}{\code{character}\cr
Names provided in \code{x} must be a permutation of the set \code{permutation.of}.
Duplicated names in \code{permutation.of} are stripped out and duplicated names in \code{x}
thus lead to a failed check.
Use this argument instead of \code{identical.to} if the order of the names is not relevant.}

\item{identical.to}{\code{character}\cr
Names provided in \code{x} must be identical to the vector \code{identical.to}.
Use this argument instead of \code{permutation.of} if the order of the names is relevant.}

\item{disjunct.from}{\code{character}\cr
Names provided in \code{x} must may not be present in the vector \code{disjunct.from}.}

\item{what}{\code{character(1)}\cr
Type of name vector to check, e.g. \dQuote{names} (default), \dQuote{colnames} or \dQuote{rownames}.}
}
\value{
\itemize{
\item Calls to \code{is_names} are guaranteed to return a scalar boolean (ie. a single \code{TRUE} or \code{FALSE} value). If an argument of length > 1 is given, \code{FALSE} is returned.
\item \code{are_names} is a wrapper around \code{\link[purrr]{map_lgl}(vec, \(i) is_names(i, ...))}. A boolean vector of the same length as the input is guaranteed.
\item Calls to \code{is_not_names}/\code{are_not_names} negate the output of \code{is_names}/\code{are_names}.
}
}
\description{
This is a re-export of \code{\link[checkmate:checkNames]{checkmate::test_names()}}, modified to have standardised naming and standardised vector handling.
Documentation is atuomatically generated from the original package documentation. See the \code{\link[checkmate:checkNames]{original}} for full details.

Performs various checks on character vectors, usually names.
}
