% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{is_int_na}
\alias{is_int_na}
\title{is_int_na function from rlang}
\usage{
is_int_na(x)
}
\arguments{
\item{x}{An object to test}
}
\description{
Re-export of \code{rlang::is_int_na}.
See the original package documentation for full details.
list(list("html"), list(list(list("https://lifecycle.r-lib.org/articles/stages.html#questioning"), list(list(list("lifecycle-questioning.svg"), list("options: alt='\link{Questioning}'"))))), list(list("\link{Questioning}")))

list("are_na()") checks for missing values in a vector and is equivalent
to list(list("base::is.na()")). It is a vectorised predicate, meaning that its
output is always the same length as its input. On the other hand,
list("is_na()") is a scalar predicate and always returns a scalar
boolean, list("TRUE") or list("FALSE"). If its input is not scalar, it returns
list("FALSE"). Finally, there are typed versions that check for
particular list("missing types").
}
