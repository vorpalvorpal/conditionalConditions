% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{is_named}
\alias{is_named}
\alias{are_named,}
\alias{is_not_named,}
\alias{are_not_named}
\alias{is_not_named}
\alias{are_named}
\title{Check if an argument is named}
\usage{
is_named(x, type = "named")

is_not_named(x, type)

are_named(x, type)

are_not_named(x, type)
}
\arguments{
\item{x}{any\cr
Object to check.}

\item{type}{character(1)\cr
Select the check(s) to perform.
\dQuote{unnamed} checks \code{x} to be unnamed.
\dQuote{named} (default) checks \code{x} to be named which excludes names to be \code{NA} or empty (\code{""}).
\dQuote{unique} additionally tests for non-duplicated names.
\dQuote{strict} checks for unique names which comply to R's variable name restrictions.
Note that for zero-length \code{x} every name check evaluates to \code{TRUE}.}
}
\value{
\itemize{
\item Calls to \code{is_named} are guaranteed to return a scalar boolean (ie. a single \code{TRUE} or \code{FALSE} value). If an argument of length > 1 is given, \code{FALSE} is returned.
\item \code{are_named} is a wrapper around \code{\link[purrr]{map_lgl}(vec, \(i) is_named(i, ...))}. A boolean vector of the same length as the input is guaranteed.
\item Calls to \code{is_not_named}/\code{are_not_named} negate the output of \code{is_named}/\code{are_named}.
}
}
\description{
This is a re-export of \code{\link[checkmate:checkNamed]{checkmate::test_named()}}, modified to have standardised naming and standardised vector handling.
Documentation is atuomatically generated from the original package documentation. See the \code{\link[checkmate:checkNamed]{original}} for full details.

Check if an argument is named.
}
